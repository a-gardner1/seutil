name: Python build

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  format:
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: run black
        uses: psf/black@stable

  lint:
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff
      # Include `--format=github` to enable automatic inline annotations.
      - name: run ruff
        run: ruff check --format=github .

  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python: ["3.8", "3.9", "3.10"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
        id: buildx
      - name: register docker cache
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-${{ matrix.python }}-buildx-${{ hashFiles('Dockerfile', 'pyproject.toml') }}
      - name: build docker image
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          load: true
          tags: python-build:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: start docker container
        run: docker run -d --name python-build python-build:latest
      - name: run pytest (unit tests)
        run: |
          pytest tests/unit --cov-report=term-missing --cov-append
      - name: run pytest (integration tests)
        run: |
          pytest tests/integration --cov-report=term-missing --cov-append
